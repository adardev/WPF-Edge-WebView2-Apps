{"version":3,"file":"vendors-node_modules_github_mini-throttle_dist_decorators_js-node_modules_accname_dist_access-ce77c7-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/mini-throttle/dist/decorators.js","node_modules/accname/dist/accessible_name.js","node_modules/accname/dist/lib/compute_text_alternative.js","node_modules/accname/dist/lib/context.js","node_modules/accname/dist/lib/options.js","node_modules/accname/dist/lib/polyfill.js","node_modules/accname/dist/lib/rule2A.js","node_modules/accname/dist/lib/rule2B.js","node_modules/accname/dist/lib/rule2C.js","node_modules/accname/dist/lib/rule2D.js","node_modules/accname/dist/lib/rule2E.js","node_modules/accname/dist/lib/rule2F.js","node_modules/accname/dist/lib/rule2G.js","node_modules/accname/dist/lib/rule2I.js","node_modules/accname/dist/lib/util.js"],"sourcesContent":["import { debounce as db, throttle as th } from './index';\nexport function throttle(wait = 0, opts = {}) {\n    return (proto, name, descriptor) => {\n        if (!descriptor || typeof descriptor.value !== 'function') {\n            throw new Error('debounce can only decorate functions');\n        }\n        const fn = descriptor.value;\n        descriptor.value = th(fn, wait, opts);\n        Object.defineProperty(proto, name, descriptor);\n    };\n}\nexport function debounce(wait = 0, opts = {}) {\n    return (proto, name, descriptor) => {\n        if (!descriptor || typeof descriptor.value !== 'function') {\n            throw new Error('debounce can only decorate functions');\n        }\n        const fn = descriptor.value;\n        descriptor.value = db(fn, wait, opts);\n        Object.defineProperty(proto, name, descriptor);\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNameComputationDetails = exports.getAccessibleName = void 0;\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst compute_text_alternative_1 = require(\"./lib/compute_text_alternative\");\n/**\n * Compute the accessible name for a given `Element`.\n * @param elem - The `Element` whose accessible name will be calculated.\n */\nfunction getAccessibleName(elem, options = {}) {\n    return compute_text_alternative_1.computeTextAlternative(elem, options).name;\n}\nexports.getAccessibleName = getAccessibleName;\n/**\n * Get details surrounding the computation of the accessible name for a given\n * `Element`\n * @param elem - The `Element` whose accessible name will be calculated.\n */\nfunction getNameComputationDetails(elem, options = {}) {\n    return compute_text_alternative_1.computeTextAlternative(elem, options);\n}\nexports.getNameComputationDetails = getNameComputationDetails;\n//# sourceMappingURL=accessible_name.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TEST_ONLY = exports.computeTextAlternative = void 0;\nconst context_1 = require(\"./context\");\nconst options_1 = require(\"./options\");\nconst rule2A_1 = require(\"./rule2A\");\nconst rule2B_1 = require(\"./rule2B\");\nconst rule2C_1 = require(\"./rule2C\");\nconst rule2D_1 = require(\"./rule2D\");\nconst rule2E_1 = require(\"./rule2E\");\nconst rule2F_1 = require(\"./rule2F\");\nconst rule2G_1 = require(\"./rule2G\");\nconst rule2I_1 = require(\"./rule2I\");\nconst ruleToImpl = {\n    '2A': rule2A_1.rule2A,\n    '2B': rule2B_1.rule2B,\n    '2C': rule2C_1.rule2C,\n    '2D': rule2D_1.rule2D,\n    '2E': rule2E_1.rule2E,\n    '2F': rule2F_1.rule2F,\n    '2G': rule2G_1.rule2G,\n    '2I': rule2I_1.rule2I,\n};\n/**\n * @param node - The node whose text alternative will be calculated\n * @param  context - Additional information relevant to the text alternative\n * computation for node. Optional paramater is 'getDefaultContext' by default.\n * @return - The text alternative for node\n */\nfunction computeTextAlternative(node, options = {}, context = context_1.getDefaultContext()) {\n    const result = computeRawTextAlternative(node, options_1.withDefaults(options), context);\n    return {\n        // # SPEC ASSUMPTION: The result of the name computation is trimmed.\n        name: result.name.trim(),\n        steps: result.steps,\n    };\n}\nexports.computeTextAlternative = computeTextAlternative;\n/**\n * Compute the text alternative without trimming leading and trailing\n * whitespace.\n */\nfunction computeRawTextAlternative(node, options = options_1.withDefaults({}), context = context_1.getDefaultContext()) {\n    // Try each rule sequentially on the target Node.\n    for (const [rule, impl] of Object.entries(ruleToImpl)) {\n        const result = impl(node, options, context, computeRawTextAlternative);\n        // A rule has been applied if its implementation has\n        // returned a string.\n        if (result !== null) {\n            // # SPEC ASSUMPTION: Even though not called out explicitly, every rule\n            // should return an (untrimmed) flat string.\n            const text = result.replace(/\\s+/g, ' ');\n            context.inherited.steps.push({\n                rule: rule,\n                node,\n                text,\n            });\n            return {\n                name: text,\n                steps: context.inherited.steps,\n            };\n        }\n    }\n    return {\n        name: '',\n        steps: context.inherited.steps,\n    };\n}\nexports.TEST_ONLY = { computeRawTextAlternative };\n//# sourceMappingURL=compute_text_alternative.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultContext = void 0;\n/**\n * Returns a context instance in its default state.\n */\nfunction getDefaultContext() {\n    return {\n        inherited: {\n            visitedNodes: [],\n            steps: [],\n        },\n    };\n}\nexports.getDefaultContext = getDefaultContext;\n//# sourceMappingURL=context.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withDefaults = void 0;\n/** Fills in missing options with their default values */\nfunction withDefaults(opts) {\n    var _a;\n    return { includePseudoElements: (_a = opts.includePseudoElements) !== null && _a !== void 0 ? _a : false };\n}\nexports.withDefaults = withDefaults;\n//# sourceMappingURL=options.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closest = void 0;\n/** `element.matches(selector)` with a polyfill for IE */\nfunction matches(element, selector) {\n    var _a, _b, _c, _d, _e;\n    return ((_e = (_b = (_a = element.matches) === null || _a === void 0 ? void 0 : _a.call(element, selector)) !== null && _b !== void 0 ? _b : (_d = (_c = element).msMatchesSelector) === null || _d === void 0 ? void 0 : _d.call(_c, selector)) !== null && _e !== void 0 ? _e : element.webkitMatchesSelector(selector));\n}\n/** `element.closest(selector)` with a polyfill for IE */\nfunction closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    while (!matches(element, selector)) {\n        if (element.parentElement === null) {\n            return null;\n        }\n        element = element.parentElement;\n    }\n    return element;\n}\nexports.closest = closest;\n//# sourceMappingURL=polyfill.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2A = void 0;\nconst polyfill_1 = require(\"./polyfill\");\nconst util_1 = require(\"./util\");\n/**\n * Looks at a variety of characteristics (CSS, attributes)\n * to determine if 'node' should be considered hidden\n * @param node - node whose hidden-ness is being calculated\n * @return - whether or not the node is considered hidden\n */\n// #SPEC_ASSUMPTION (A.2) : definition of 'hidden'\nfunction isHidden(node) {\n    if (!util_1.isHTMLElement(node)) {\n        return false;\n    }\n    if (window.getComputedStyle(node).visibility === 'hidden') {\n        return true;\n    }\n    if (polyfill_1.closest(node, '[hidden],[aria-hidden=\"true\"]') !== null) {\n        return true;\n    }\n    // The \"display\" style isn't inherited so check ancestors directly\n    let ancestor = node;\n    while (ancestor !== null) {\n        if (window.getComputedStyle(ancestor).display === 'none') {\n            return true;\n        }\n        ancestor = ancestor.parentElement;\n    }\n    return false;\n}\n/**\n * Condition for applying rule 2A\n * @param node - The node whose text alternative is being calculated\n * @param context - Additional information relevant to the text alternative\n *     computation for node\n * @return - Whether or not node satisfies the condition for rule 2A\n */\nfunction rule2ACondition(node, context) {\n    // #SPEC_ASSUMPTION (A.1) : definition of 'directly referenced'\n    return isHidden(node) && !context.directLabelReference;\n}\n/**\n * Implementation of rule 2A\n * @param node - The element whose text alternative is being calculated\n * @param context - Additional information relevant to the text alternative\n *     computation for node\n * @return - The text alternative string is returned if condition is true,\n * null is returned otherwise, indicating that the condition of this rule was\n * not satisfied.\n *\n * tslint:disable-next-line:enforce-name-casing\n */\nfunction rule2A(node, _, context) {\n    let result = null;\n    if (rule2ACondition(node, context)) {\n        result = '';\n    }\n    return result;\n}\nexports.rule2A = rule2A;\n//# sourceMappingURL=rule2A.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2B = exports.resolveValidAriaLabelledbyIdrefs = void 0;\nconst util_1 = require(\"./util\");\n/**\n * Get any HTMLElement referenced in the aria-labelledby attribute\n * of 'elem' that exist in the document (i.e is 'valid')\n * @param elem - element whose aria-labelledby attribute is considered\n * @return - An array of any HTMLElement in the document that is referenced\n * by elem's aria-labelledby\n */\nfunction resolveValidAriaLabelledbyIdrefs(elem) {\n    var _a, _b;\n    const idrefs = (_b = (_a = elem.getAttribute('aria-labelledby')) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n    const validElems = [];\n    for (const id of idrefs) {\n        const elem = document.getElementById(id);\n        if (elem) {\n            validElems.push(elem);\n        }\n    }\n    return validElems;\n}\nexports.resolveValidAriaLabelledbyIdrefs = resolveValidAriaLabelledbyIdrefs;\n/**\n * Implementation of rule 2B\n * @param node - node whose text alternative is being computed\n * @param context - Additional information relevant to the text alternative\n * computation for node\n * @return - The text alternative string is returned if condition is true,\n * null is returned otherwise, indicating that the condition of this rule was\n * not satisfied.\n */\nfunction rule2B(node, options, context, computeTextAlternative) {\n    if (!util_1.isHTMLElement(node)) {\n        return null;\n    }\n    // #SPEC_ASSUMPTION (B.1) : definition of 'part of an aria-labelledby\n    // traversal'\n    if (context.directLabelReference) {\n        return null;\n    }\n    const labelElems = resolveValidAriaLabelledbyIdrefs(node);\n    if (labelElems.length === 0) {\n        return null;\n    }\n    return labelElems\n        .map(labelElem => {\n        context.inherited.partOfName = true;\n        return computeTextAlternative(labelElem, options, {\n            directLabelReference: true,\n            inherited: context.inherited,\n        })\n            .name;\n    })\n        .join(' ')\n        .trim();\n}\nexports.rule2B = rule2B;\n//# sourceMappingURL=rule2B.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2C = void 0;\nconst rule2E_1 = require(\"./rule2E\");\nconst util_1 = require(\"./util\");\n/**\n * Implementation for rule 2C\n * @param node - node whose text alternative is being computed\n * @param context - information relevant to the computation of node's text\n *     alternative\n * @return text alternative for 'node' if rule 2C accepts 'node', null\n *     otherwise.\n */\nfunction rule2C(node, options, context, computeTextAlternative) {\n    var _a;\n    if (!util_1.isElement(node)) {\n        return null;\n    }\n    const ariaLabel = (_a = node.getAttribute('aria-label')) !== null && _a !== void 0 ? _a : '';\n    if (ariaLabel.trim() === '') {\n        return null;\n    }\n    // #SPEC_ASSUMPTION (C.1) : 'part of name' implies 'traversal\n    // due to recursion'.\n    if (context.inherited.partOfName) {\n        // 'rule2EResult !== null' indicates that 'node' is an embedded\n        // control as defined in step 2E.\n        const rule2EResult = rule2E_1.rule2E(node, options, { inherited: context.inherited }, computeTextAlternative);\n        if (rule2EResult !== null) {\n            return rule2EResult;\n        }\n    }\n    return ariaLabel;\n}\nexports.rule2C = rule2C;\n//# sourceMappingURL=rule2C.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2D = exports.LABELLABLE_ELEMENT_TYPES = exports.getUnlabelledInputText = void 0;\nconst util_1 = require(\"./util\");\n/**\n * Process elem's text alternative if elem is an <input>, assuming\n * that no <label> element references elem.\n * @param elem - element whose text alternative is being processed\n * @return - text alternative of elem if elem is an <input>\n */\nfunction getUnlabelledInputText(elem) {\n    // Implementation reflects rules defined in sections 5.1 - 5.3 of html-aam\n    // spec:\n    // https://www.w3.org/TR/html-aam-1.0/#accessible-name-and-description-computation\n    var _a;\n    const inputType = (_a = elem.getAttribute('type')) !== null && _a !== void 0 ? _a : '';\n    if ((inputType === 'button' || inputType === 'submit' ||\n        inputType === 'reset') &&\n        elem.hasAttribute('value')) {\n        return elem.value;\n    }\n    if (inputType === 'submit' || inputType === 'reset') {\n        // This should be a localised string, but for now we are\n        // just supporting English.\n        return inputType;\n    }\n    if (inputType === 'image' && elem.hasAttribute('alt')) {\n        return elem.getAttribute('alt');\n    }\n    if (inputType === 'image' && !elem.hasAttribute('title')) {\n        // This should be a localised string, but for now we are\n        // just supporting English.\n        return 'Submit Query';\n    }\n    // Title attribute handled by 2I.\n    return null;\n}\nexports.getUnlabelledInputText = getUnlabelledInputText;\n// Only certain element types are labellable\n// See: https://html.spec.whatwg.org/multipage/forms.html#category-label\nexports.LABELLABLE_ELEMENT_TYPES = [\n    'BUTTON',\n    'INPUT',\n    'METER',\n    'OUTPUT',\n    'PROGRESS',\n    'SELECT',\n    'TEXTAREA',\n];\n/** Checks if `control` is the element that is labelled by `label` */\nfunction isLabelledControl(label, control) {\n    if (label.control !== undefined) {\n        return label.control === control;\n    }\n    else {\n        // For ie & edge\n        if (label.htmlFor !== '' && label.htmlFor === control.id) {\n            return true;\n        }\n        else if (label.htmlFor === '' && label.contains(control)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction hasPresentationRole(el) {\n    const explicitRole = el.getAttribute('role');\n    if (explicitRole === 'presentation' || explicitRole === 'none') {\n        return true;\n    }\n    // Implicit presentation role.\n    if (explicitRole === null && util_1.hasTagName(el, 'img') &&\n        el.getAttribute('alt') === '') {\n        return true;\n    }\n    return false;\n}\n/**\n * Gets the text alternative as defined by one or more native <label>s.\n * @param elem - element whose text alternative is being calculated\n * @param context - information relevant to the computation of elem's text\n *     alternative\n * @return - the text alternative for elem if elem is legally labelled by a\n *     native\n * <label>, null otherwise.\n */\nfunction getTextIfLabelled(elem, options, context, computeTextAlternative) {\n    // Using querySelectorAll to get <label>s in DOM order.\n    const allLabelElems = document.querySelectorAll('label');\n    const labelElems = Array.from(allLabelElems).filter(label => isLabelledControl(label, elem));\n    const textAlternative = labelElems\n        .map(labelElem => computeTextAlternative(labelElem, options, {\n        directLabelReference: true,\n        inherited: context.inherited,\n    }).name)\n        .filter(text => text !== '')\n        .join(' ');\n    return textAlternative || null;\n}\n/**\n * Implementation for rule 2D\n * @param node - the node whose text alternative is being computed\n * @param context - information relevant to the text alternative computation\n * for node\n * @return - text alternative for node if the conditions for applying\n * rule 2D are satisfied, null otherwise.\n */\nfunction rule2D(node, options, context, computeTextAlternative) {\n    // <title>s define text alternatives for <svg>s\n    // See: https://www.w3.org/TR/svg-aam-1.0/#mapping_additional_nd\n    if (util_1.isSVGElement(node)) {\n        for (const child of node.childNodes) {\n            if (util_1.isSVGElement(child) && util_1.hasTagName(child, 'title')) {\n                return child.textContent;\n            }\n        }\n    }\n    if (!util_1.isHTMLElement(node)) {\n        return null;\n    }\n    if (hasPresentationRole(node)) {\n        return null;\n    }\n    // #SPEC_ASSUMPTION (D.1) : html-aam (https://www.w3.org/TR/html-aam-1.0/)\n    // specifies all native attributes and elements that define a text\n    // alternative.\n    if (exports.LABELLABLE_ELEMENT_TYPES.includes(node.tagName)) {\n        const labelText = getTextIfLabelled(node, options, context, computeTextAlternative);\n        if (labelText) {\n            return labelText;\n        }\n    }\n    // If input is not <label>led, use native attribute /\n    // element information to compute a text alternative\n    if (util_1.hasTagName(node, 'input')) {\n        const inputTextAlternative = getUnlabelledInputText(node);\n        if (inputTextAlternative) {\n            return inputTextAlternative;\n        }\n    }\n    // <caption>s define text alternatives for <table>s\n    if (util_1.hasTagName(node, 'table')) {\n        const captionElem = node.querySelector('caption');\n        if (captionElem) {\n            context.inherited.partOfName = true;\n            return computeTextAlternative(captionElem, options, {\n                inherited: context.inherited,\n            })\n                .name;\n        }\n    }\n    // <figcaption>s define text alternatives for <figure>s\n    if (util_1.hasTagName(node, 'figure')) {\n        const figcaptionElem = node.querySelector('figcaption');\n        if (figcaptionElem) {\n            context.inherited.partOfName = true;\n            return computeTextAlternative(figcaptionElem, options, {\n                inherited: context.inherited,\n            })\n                .name;\n        }\n    }\n    // <legend>s define text alternatives for <fieldset>s\n    if (util_1.hasTagName(node, 'fieldset')) {\n        const legendElem = node.querySelector('legend');\n        if (legendElem) {\n            context.inherited.partOfName = true;\n            return computeTextAlternative(legendElem, options, {\n                inherited: context.inherited,\n            })\n                .name;\n        }\n    }\n    // alt attributes define text alternatives for\n    // <img>s and <area>s\n    const altAttribute = node.getAttribute('alt');\n    if (altAttribute && (util_1.hasTagName(node, 'img') || util_1.hasTagName(node, 'area'))) {\n        return altAttribute;\n    }\n    return null;\n}\nexports.rule2D = rule2D;\n//# sourceMappingURL=rule2D.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2E = exports.getValueIfRange = exports.getValueIfTextbox = exports.TEXT_INPUT_TYPES = void 0;\nconst util_1 = require(\"./util\");\n// Input types that imply role 'textbox' if list attribute is not present,\n// and imply role 'combobox' if list attribute is present.\nexports.TEXT_INPUT_TYPES = ['email', 'tel', 'text', 'url', 'search'];\n/**\n * Determines whether a given node has role 'textbox' and,\n * if so, gets the value of that textbox.\n * @param node - element whose role is being calculated\n * @return - textbox value if node is a textbox, null otherwise\n * (null indicates that node is not a textbox).\n */\nfunction getValueIfTextbox(node) {\n    // #SPEC_ASSUMPTION (E.3) : Explicit role='textbox' are handled by rule2F.\n    // Handles the case where node role is explictly overwritten\n    const nodeRole = node.getAttribute('role');\n    if (nodeRole && nodeRole !== 'textbox') {\n        return null;\n    }\n    // type <textarea> implies role='textbox'\n    if (util_1.hasTagName(node, 'textarea')) {\n        return node.value;\n    }\n    // <input> with certain type values & no list attribute implies role='textbox'\n    if (util_1.hasTagName(node, 'input') && exports.TEXT_INPUT_TYPES.includes(node.type) &&\n        !node.hasAttribute('list')) {\n        return node.value;\n    }\n    return null;\n}\nexports.getValueIfTextbox = getValueIfTextbox;\n// Input types that imply role 'range'\nconst RANGE_INPUT_TYPES = ['number', 'range'];\n// Roles for whom 'range' is a superclass.\n// Each of these roles explicitly defines the 'range' role.\nconst RANGE_ROLES = ['spinbutton', 'slider', 'progressbar', 'scrollbar'];\n/**\n * Determines whether a given node has role 'range' and,\n * if so, gets the text alternative for that node.\n * @param node - node whose role is being calculated\n * @return - text alternative for node if node is a 'range',\n * null otherwise (indicating that node is not a range).\n */\nfunction getValueIfRange(node) {\n    var _a;\n    const nodeRoleAttribute = (_a = node.getAttribute('role')) !== null && _a !== void 0 ? _a : '';\n    const isExplicitRange = RANGE_ROLES.includes(nodeRoleAttribute);\n    // Handles the case where node role is explictly overwritten\n    if (nodeRoleAttribute && !isExplicitRange) {\n        return null;\n    }\n    const isImplicitRange = (util_1.hasTagName(node, 'input') && RANGE_INPUT_TYPES.includes(node.type)) ||\n        util_1.hasTagName(node, 'progress');\n    if (isExplicitRange || isImplicitRange) {\n        if (node.hasAttribute('aria-valuetext')) {\n            return node.getAttribute('aria-valuetext');\n        }\n        if (node.hasAttribute('aria-valuenow')) {\n            return node.getAttribute('aria-valuenow');\n        }\n        if (util_1.hasTagName(node, 'input')) {\n            return node.value;\n        }\n        if (util_1.hasTagName(node, 'progress')) {\n            return node.value.toString();\n        }\n    }\n    return null;\n}\nexports.getValueIfRange = getValueIfRange;\n/**\n * Determines whether a given node has role 'combobox'\n * or 'listbox' and, if so, gets the text alternative for the\n * option(s) selected by that combobox / listbox.\n * @param node - node whose role is being calculated\n * @param context - information relevant to the calculation of that role\n * @return - text alternative for selected option(s) if node is a\n * combobox or listbox, null otherwise.\n * (null indicates that node is neither combobox nor listbox).\n */\nfunction getValueIfComboboxOrListbox(node, options, context, computeTextAlternative) {\n    // Handles the case where node role is explictly overwritten\n    const nodeRole = node.getAttribute('role');\n    if (nodeRole && nodeRole !== 'listbox' && nodeRole !== 'combobox') {\n        return null;\n    }\n    // Combobox role implied by input type and presence of list attribute,\n    // chosen option is the input value.\n    if (util_1.hasTagName(node, 'input') && exports.TEXT_INPUT_TYPES.includes(node.type) &&\n        (node.hasAttribute('list') || nodeRole === 'combobox')) {\n        return node.value;\n    }\n    // Text alternative for elems of role 'listbox' and 'combobox'\n    // consists of the text alternatives for their selected options.\n    let selectedOptions = [];\n    // Listbox may be defined explicitly using 'role',\n    // and using 'aria-selected' attribute to mark selected options.\n    if (nodeRole && nodeRole === 'listbox') {\n        selectedOptions = Array.from(node.querySelectorAll('[role=\"option\"][aria-selected=\"true\"]'));\n    }\n    // A <select> element is always implicitly either a listbox or a combobox\n    else if (util_1.hasTagName(node, 'select')) {\n        selectedOptions = Array.from(node.selectedOptions);\n    }\n    // If the current node has any selected options (either by aria-selected\n    // or semantic <option selected>) they will be stored in selectedOptions.\n    if (selectedOptions.length > 0) {\n        // #SPEC_ASSUMPTION (E.2) : consider multiple selected options' text\n        // alternatives, joining them with a space as in 2B.ii.c\n        return selectedOptions\n            .map(optionElem => computeTextAlternative(optionElem, options, {\n            inherited: context.inherited,\n        }).name)\n            .filter(alternativeText => alternativeText !== '')\n            .join(' ');\n    }\n    return null;\n}\n/**\n * Implementation for rule 2E.\n * @param node - node whose text alternative is being calculated\n * @param context - additional information relevant to the computation of a text\n * alternative for node.\n * @return text alternative for 'node' if rule 2E accepts 'node', null\n *     otherwise.\n */\nfunction rule2E(node, options, context, computeTextAlternative) {\n    if (!util_1.isHTMLElement(node)) {\n        return null;\n    }\n    // #SPEC_ASSUMPTION (E.1) : that 'embedded within the label\n    // for another widget' is equivalent to 'part of a name computation'\n    if (!context.inherited.partOfName) {\n        return null;\n    }\n    const textboxValue = getValueIfTextbox(node);\n    if (textboxValue) {\n        return textboxValue;\n    }\n    // #SPEC_ASSUMPTION (E.4) : menu button is handled by 2F\n    const comboboxOrListboxValue = getValueIfComboboxOrListbox(node, options, context, computeTextAlternative);\n    if (comboboxOrListboxValue) {\n        return comboboxOrListboxValue;\n    }\n    const rangeValue = getValueIfRange(node);\n    if (rangeValue) {\n        return rangeValue;\n    }\n    return null;\n}\nexports.rule2E = rule2E;\n//# sourceMappingURL=rule2E.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TEST_ONLY = exports.rule2F = exports.inlineTags = exports.getCssContent = exports.allowsNameFromContent = void 0;\nconst polyfill_1 = require(\"./polyfill\");\nconst util_1 = require(\"./util\");\nconst ALWAYS_NAME_FROM_CONTENT = {\n    // Explicit roles allowing 'name from content'\n    // (https://www.w3.org/TR/wai-aria-1.1/#namefromcontent)\n    roles: [\n        'button', 'cell', 'checkbox',\n        'columnheader', 'gridcell', 'heading',\n        'link', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'option', 'radio',\n        'row', 'rowgroup', 'rowheader',\n        'switch', 'tab', 'tooltip',\n        'tree', 'treeitem',\n    ],\n    // HTML element types that allow name from content according\n    // to their implicit aria roles.\n    // (https://www.w3.org/TR/html-aria/#docconformance)\n    tags: [\n        'button',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'summary',\n        'tbody',\n        'tfoot',\n        'thead',\n    ],\n};\n// See https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\n// for discussion of roles & tags that forbid name from content.\n//\n// *This case is not explicitly included in version 1.1 of the spec, however,\n// as per the thread linked above we have included it (as have other\n// implementations).\nconst NEVER_NAME_FROM_CONTENT = {\n    roles: [\n        'alert', 'alertdialog', 'application', 'article', 'banner',\n        'complementary', 'dialog', 'document', 'feed', 'figure',\n        'form', 'grid', 'group', 'img', 'listbox',\n        'log', 'main', 'marquee', 'math', 'menu',\n        'menubar', 'navigation', 'radiogroup', 'region', 'scrollbar',\n        'search', 'searchbox', 'separator', 'slider', 'spinbutton',\n        'tablist', 'tabpanel', 'textbox', 'timer', 'toolbar',\n        'treegrid',\n    ],\n    tags: [\n        'article', 'aside', 'body', 'datalist', 'dialog', 'fieldset', 'figure',\n        'footer', 'form', 'header', 'hr', 'img', 'input', 'main',\n        'math', 'menu', 'nav', 'optgroup', 'section', 'select', 'textarea',\n    ],\n};\n// List 3 from\n// https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\nconst SOMETIMES_NAME_FROM_CONTENT = {\n    roles: [\n        'contentinfo',\n        'definition',\n        'directory',\n        'list',\n        'note',\n        'status',\n        'table',\n        'term',\n    ],\n    tags: ['dd', 'details', 'dl', 'ol', 'output', 'table', 'ul'],\n};\n/**\n * Some HTML elements allow name from context only if certain\n * conditions apply. This function maps element types to functions that\n * determine if a specific element of that type allows name from content\n * (https://www.w3.org/TR/html-aria/#docconformance)\n * @param elemNodeName - the nodeName (tag type) of the element whose ability\n * to allow name from content is being calculated.\n * @return - a function that may be applied to an element of type elemNodeName\n * that returns true if that node allows name from content, and false otherwise.\n */\nfunction getFunctionCalculatingAllowsNameFromContent(elemNodeName) {\n    switch (elemNodeName) {\n        case 'th':\n            return (elem) => polyfill_1.closest(elem, 'table') !== null;\n        case 'td':\n            return (elem) => polyfill_1.closest(elem, 'table') !== null;\n        case 'option':\n            return (elem) => polyfill_1.closest(elem, 'select,datalist') !== null;\n        case 'a':\n            return (elem) => elem.hasAttribute('href');\n        case 'area':\n            return (elem) => elem.hasAttribute('href');\n        case 'link':\n            return (elem) => elem.hasAttribute('href');\n        default:\n            return null;\n    }\n}\n/**\n * Checks if a given HTMLElement matches any of the roles in a given RoleType.\n * @param elem - element whose role type is in question.\n * @param roleType - lists of indicators for some role type.\n */\nfunction matchesRole(elem, roleType) {\n    var _a, _b;\n    // Explicit roles : specified using 'role' attribute\n    const explicitRole = (_b = (_a = elem.getAttribute('role')) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase()) !== null && _b !== void 0 ? _b : '';\n    if (roleType.roles.includes(explicitRole)) {\n        return true;\n    }\n    // Implicit roles : implied by current node tag name.\n    const elemNodeName = elem.nodeName.toLowerCase();\n    if (roleType.tags.includes(elemNodeName)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Checks if the contents of 'elem' with context 'context' should\n * be used in its accesssible name. This is the condition for\n * rule 2F.\n * @param elem - elem whose text alternative is being computed\n * @param context - additional information about the context of elem\n * @return - whether or not rule 2Fs condition has been satisfied\n */\nfunction allowsNameFromContent(elem, context) {\n    // The terms 'list 1', 'list 2', 'list 3' are used in reference\n    // to the following thread: see:\n    // https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\n    var _a;\n    // Handles list 3 roles\n    if (context.inherited.partOfName && elem.parentElement) {\n        const parent = elem.parentElement;\n        if (matchesRole(parent, ALWAYS_NAME_FROM_CONTENT) &&\n            matchesRole(elem, SOMETIMES_NAME_FROM_CONTENT)) {\n            return true;\n        }\n    }\n    // Handles list 2 roles\n    if (matchesRole(elem, NEVER_NAME_FROM_CONTENT)) {\n        // role=menu should not allow name from content even if focusable.\n        // See http://wpt.live/accname/name_test_case_733-manual.html\n        if (((_a = elem.getAttribute('role')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'menu') {\n            return false;\n        }\n        return util_1.isFocusable(elem);\n    }\n    // Handles list 1 roles\n    if (matchesRole(elem, ALWAYS_NAME_FROM_CONTENT)) {\n        return true;\n    }\n    // Elements that conditionally have an implicit role that matches\n    // ALWAYS_NAME_FROM_CONTENT\n    const elemNodeName = elem.nodeName.toLowerCase();\n    const nameFromContentFunction = getFunctionCalculatingAllowsNameFromContent(elemNodeName);\n    if (nameFromContentFunction && nameFromContentFunction(elem)) {\n        return true;\n    }\n    if (context.directLabelReference) {\n        return true;\n    }\n    if (context.inherited.partOfName) {\n        return true;\n    }\n    return false;\n}\nexports.allowsNameFromContent = allowsNameFromContent;\n/**\n * Gets text content generated by CSS pseudo elements for a given HTMLElement\n * @param elem - element whose css generated content is being calculated\n * @param pseudoElementName - the name of the pseudo element whose content is\n * being resolved.\n * @return - css generated content for pseudoElementName if such content exists,\n * empty string otherwise.\n */\nfunction getCssContent(elem, pseudoElementName) {\n    const computedStyle = window.getComputedStyle(elem, pseudoElementName);\n    const cssContent = computedStyle.content;\n    const isBlockDisplay = computedStyle.display === 'block';\n    // <string> CSS content identified by surrounding quotes\n    // see: https://developer.mozilla.org/en-US/docs/Web/CSS/content\n    // and: https://developer.mozilla.org/en-US/docs/Web/CSS/string\n    if ((cssContent[0] === '\"' && cssContent[cssContent.length - 1] === '\"') ||\n        (cssContent[0] === '\\'' && cssContent[cssContent.length - 1] === '\\'')) {\n        return isBlockDisplay ? ' ' + cssContent.slice(1, -1) + ' ' :\n            cssContent.slice(1, -1);\n    }\n    return '';\n}\nexports.getCssContent = getCssContent;\n// See https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\n// 'br' removed as it should add a whitespace to the accessible name.\nexports.inlineTags = [\n    'a', 'abbr', 'acronym', 'b', 'bdi', 'bdo', 'big',\n    'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del',\n    'dfn', 'em', 'embed', 'i', 'iframe', 'img', 'ins',\n    'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object',\n    'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp',\n    'script', 'select', 'slot', 'small', 'span', 'strong', 'sub',\n    'sup', 'template', 'textarea', 'time', 'tt', 'u', 'var',\n    'video', 'wbr',\n];\n/**\n * Implementation of rule 2F\n * @param node - node whose text alternative is being calculated\n * @param context - additional info relevant to the calculation of nodes\n * text alternative\n * @return - text alternative for node if the conditions of 2F are satisfied,\n * null otherwise.\n */\nfunction rule2F(node, options, context, computeTextAlternative) {\n    if (!util_1.isHTMLElement(node)) {\n        return null;\n    }\n    // The condition for rule 2F determines if the contents of the\n    // current node should be used in its accessible name.\n    if (!allowsNameFromContent(node, context)) {\n        return null;\n    }\n    const a11yChildNodes = Array.from(node.childNodes);\n    // Include any aria-owned Nodes in the list of 'child nodes'\n    const ariaOwnedNodeIds = node.getAttribute('aria-owns');\n    if (ariaOwnedNodeIds) {\n        for (const idref of ariaOwnedNodeIds.split(' ')) {\n            const referencedNode = document.getElementById(idref);\n            if (referencedNode) {\n                a11yChildNodes.push(referencedNode);\n            }\n        }\n    }\n    const textAlterantives = [];\n    for (const childNode of a11yChildNodes) {\n        if (!context.inherited.visitedNodes.includes(childNode)) {\n            context.inherited.visitedNodes.push(childNode);\n            context.inherited.partOfName = true;\n            const textAlterantive = computeTextAlternative(childNode, options, {\n                inherited: context.inherited,\n            }).name;\n            if (exports.inlineTags.includes(childNode.nodeName.toLowerCase()) ||\n                childNode.nodeType === Node.TEXT_NODE) {\n                textAlterantives.push(textAlterantive);\n            }\n            else {\n                textAlterantives.push(` ${textAlterantive} `);\n            }\n        }\n    }\n    if (options.includePseudoElements) {\n        textAlterantives.unshift(getCssContent(node, ':before'));\n        textAlterantives.push(getCssContent(node, ':after'));\n    }\n    const result = textAlterantives.join('');\n    if (result.trim() === '') {\n        // # SPEC ASSUMPTION: If the name from contents only contains whitespace, we\n        // assume that rule 2F does not apply.\n        return null;\n    }\n    else {\n        return result;\n    }\n}\nexports.rule2F = rule2F;\nexports.TEST_ONLY = {\n    allowsNameFromContent,\n    ALWAYS_NAME_FROM_CONTENT,\n    SOMETIMES_NAME_FROM_CONTENT,\n    NEVER_NAME_FROM_CONTENT,\n};\n//# sourceMappingURL=rule2F.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2G = void 0;\n/**\n * Implementation for rule 2G\n * @param node - node whose text alternative is being computed\n * @return - text alternative of node if node is a TEXT_NODE,\n * null otherwise.\n */\nfunction rule2G(node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n        return node.data;\n    }\n    return null;\n}\nexports.rule2G = rule2G;\n//# sourceMappingURL=rule2G.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rule2I = void 0;\nconst util_1 = require(\"./util\");\n// Input types for whom placeholders should be considered when computing\n// a text alternative. See\n// https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation\nconst TEXTUAL_INPUT_TYPES = [\n    'text',\n    'password',\n    'search',\n    'tel',\n    'email',\n    'url',\n];\n/**\n * Implementation for rule 2I\n * @param node - node whose text alternative is being computed\n * @return - text alternative if rule 2I applies to node, null otherwise.\n */\nfunction rule2I(node) {\n    if (!util_1.isHTMLElement(node)) {\n        return null;\n    }\n    if (node.title) {\n        return node.title;\n    }\n    // Placeholder considered if no title is present.\n    // See\n    // https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation\n    if (util_1.hasTagName(node, 'input') && TEXTUAL_INPUT_TYPES.includes(node.type)) {\n        return node.placeholder;\n    }\n    if (util_1.hasTagName(node, 'textarea') && node.hasAttribute('placeholder')) {\n        return node.getAttribute('placeholder');\n    }\n    return null;\n}\nexports.rule2I = rule2I;\n//# sourceMappingURL=rule2I.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasTagName = exports.isSVGElement = exports.isHTMLElement = exports.isElement = exports.isFocusable = void 0;\n/**\n * Calculates whether or not a given element is focusable.\n * @param elem - The element whose focusability is to be calculated.\n */\nfunction isFocusable(elem) {\n    // See\n    // https://html.spec.whatwg.org/multipage/interaction.html#the-tabindex-attribute\n    if ((hasTagName(elem, 'a') || hasTagName(elem, 'area') ||\n        hasTagName(elem, 'link')) &&\n        elem.hasAttribute('href')) {\n        return true;\n    }\n    if ((hasTagName(elem, 'input') || hasTagName(elem, 'select') ||\n        hasTagName(elem, 'textarea') || hasTagName(elem, 'button')) &&\n        !elem.hasAttribute('disabled')) {\n        return true;\n    }\n    return elem.hasAttribute('tabindex') || elem.isContentEditable;\n}\nexports.isFocusable = isFocusable;\n/** Whether this `node` is an `Element` */\nfunction isElement(n) {\n    return n.nodeType === Node.ELEMENT_NODE;\n}\nexports.isElement = isElement;\n/** Whether this `node` is an `HTMLElement` */\nfunction isHTMLElement(n) {\n    return isElement(n) && n.namespaceURI === `http://www.w3.org/1999/xhtml`;\n}\nexports.isHTMLElement = isHTMLElement;\n/** Whether this `node` is an `SVGElement` */\nfunction isSVGElement(n) {\n    return isElement(n) && n.namespaceURI === `http://www.w3.org/2000/svg`;\n}\nexports.isSVGElement = isSVGElement;\nfunction hasTagName(el, name) {\n    return el.tagName.toLowerCase() === name;\n}\nexports.hasTagName = hasTagName;\n//# sourceMappingURL=util.js.map"],"names":["debounce","wait","opts","proto","name","descriptor","value","fn","Object","defineProperty","exports","compute_text_alternative_1","elem","options","computeTextAlternative","TEST_ONLY","context_1","options_1","rule2A_1","rule2B_1","rule2C_1","rule2D_1","rule2E_1","rule2F_1","rule2G_1","rule2I_1","ruleToImpl","rule2A","rule2B","rule2C","rule2D","rule2E","rule2F","rule2G","rule2I","computeRawTextAlternative","node","withDefaults","context","getDefaultContext","rule","impl","entries","result","text","replace","inherited","steps","push","trim","visitedNodes","_a","includePseudoElements","closest","element","selector","_b","_d","_e","matches","call","msMatchesSelector","webkitMatchesSelector","parentElement","polyfill_1","util_1","_","isHidden","isHTMLElement","window","getComputedStyle","visibility","ancestor","display","directLabelReference","resolveValidAriaLabelledbyIdrefs","idrefs","getAttribute","split","validElems","id","document","getElementById","labelElems","length","map","labelElem","partOfName","join","isElement","ariaLabel","rule2EResult","LABELLABLE_ELEMENT_TYPES","getUnlabelledInputText","inputType","hasAttribute","isSVGElement","child","childNodes","hasTagName","textContent","hasPresentationRole","el","explicitRole","includes","tagName","labelText","textAlternative","from","querySelectorAll","filter","label","control","undefined","htmlFor","contains","inputTextAlternative","captionElem","querySelector","figcaptionElem","legendElem","altAttribute","getValueIfRange","getValueIfTextbox","TEXT_INPUT_TYPES","nodeRole","type","RANGE_INPUT_TYPES","RANGE_ROLES","nodeRoleAttribute","isExplicitRange","isImplicitRange","toString","textboxValue","comboboxOrListboxValue","getValueIfComboboxOrListbox","selectedOptions","Array","optionElem","alternativeText","rangeValue","inlineTags","getCssContent","allowsNameFromContent","ALWAYS_NAME_FROM_CONTENT","roles","tags","NEVER_NAME_FROM_CONTENT","SOMETIMES_NAME_FROM_CONTENT","matchesRole","roleType","toLowerCase","elemNodeName","nodeName","isFocusable","nameFromContentFunction","getFunctionCalculatingAllowsNameFromContent","pseudoElementName","computedStyle","cssContent","content","isBlockDisplay","slice","a11yChildNodes","ariaOwnedNodeIds","idref","referencedNode","textAlterantives","childNode","textAlterantive","nodeType","Node","TEXT_NODE","unshift","data","TEXTUAL_INPUT_TYPES","title","placeholder","n","ELEMENT_NODE","isContentEditable","namespaceURI"],"sourceRoot":""}