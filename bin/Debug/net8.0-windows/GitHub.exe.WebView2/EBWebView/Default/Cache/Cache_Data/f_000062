{"version":3,"file":"vendors-node_modules_dompurify_dist_purify_es_mjs-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/dompurify/dist/purify.es.mjs"],"sourcesContent":["/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.4';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","push","arraySplice","splice","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","func","TypeError","_len2","arguments","length","_key2","thisArg","_len","_key","addToSet","set","array","transformCaseFunc","undefined","l","element","lcElement","clone","object","newObject","property","value","isArray","cleanArray","index","lookupGetter","prop","desc","get","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","CUSTOM_ELEMENT","NODE_TYPE","progressingInstruction","comment","document","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","console","warn","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","purify","createDOMPurify","trustedTypesPolicy","window","DOMPurify","root","version","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","removeChild","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","i","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","SANITIZE_NAMED_PROPS_PREFIX","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","attr","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks"],"sourceRoot":""}